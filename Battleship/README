Ονοματεπώνυμο:    Γολεμάτης Βασίλειος
Αριθμός Μητρώου:  1115 2005 00026

				                         System Programming 
                                                     2η Προγραμματιστική Εργασία
                               			         Ναυμαχία (Battleship)

A. Μεταγλώττιση/Εκτέλεση προγράμματος - Τεχνικές Λεπτομέρειες

-> Μεταγλώττιση-Εκτέλεση
   Έχει υλοποιηθεί Makefile για την μεταγλώττιση του προγράμματος και για το καθαρισμό των αντικειμενικών αρχείων και του εκτελέσιμου:
   >  make   		(Μεταγλώττιση)
   >  ./battleship         (Εκτέλεση Προγράμματος)

-> Αρχεία που περιέχονται στο tar 
  
   - main.c                  (Main Συνάρτηση)
   - Tables.c    Tables.h    (Συναρτήσεις και δηλώσεις αλγοριθμικών πινάκων παιχνιδιού)
   - Ships.c     Ships.h     (Συναρτήσεις και δηλώσεις πλοίων)
   - Human.c     Human.h     (Συναρτήσεις Human Player/Child Process)
   - Computer.c  Computer.h  (Συναρτήσεις Computer Player/Parent Process)

Β. Σχεδιασμός-Εξήγηση Προγράμματος

   Η εργασία χωρίστηκε στα παρακάτω σκέλη:
   
   -> Main συνάρτηση
   - Δημιουργία Interface παιχνιδιού με χρήση των συναρτήσεων (Tables.c) και της βιβλιοθήκης <curses.h>. 
   - Aρχικοποίηση αλγοριθμικών πινάκων (πίνακας παίχτη - αντίπαλου παίχτη).
   - Αρχικοποίηση πλοίων (χρήση συναρτήσεων Ships.c).
   - Χρήση signal handler για το σήμα Ctrl-C καθώς και δημιουργία 2 pipes για την επικοινωνία των διεργασιών Computer-Human.
     Δημιουργία διεργασίας παιδιού (Human Player) και καθορισμό των 2 pipes. Στην πρώτη pipe (p1) γράφει ο Human και διαβάζει ο Computer
     και αντίστροφα στην (p2) όπου γράφει ο Computer και διαβάζει ο Human.
   - Κλείσιμο υπολοιπόμενων pipe descriptors, τερματισμός διεργασιών - τερματισμός παιχνιδιού.

   -> Ηuman Player (Child Process)

   H διεργασία παιδί που αποτελεί την διεργασία-χρήστης είναι υπεύθυνοι για όλες τις εκτυπώσεις κατα την εξέλιξη του παιχνιδιού. Συγκεκριμένα 
   αρχικά παραπέμπεται ο χρήστης να τοποθετήσει τα πλοία του στον πίνακά του δίνοντας συντεταγμένες πρύμνης πλώρης. Γίνονται οι απαραίτητοι έλεγχοι
   όπως προβλέπουν οι κανόνες του παιχνιδιού και εφόσον δίνονται σωστές τιμές καταχωρούνται οι τιμές στο πίνακα. Κάθε στοιχείο του πίνακα είναι 
   τύπου int και είναι είτε empty, είτε ο αντίστοιχος αριθμός που καθορίζει το κάθε πλοίο. Εφόσον ο χρήστης τοποθετήσει τα πλοία του στον πίνακά του
   ξεκινάει το παιχνίδι. Εκτυπώνονται οι γραμμές εντολών για τον χρήστη (όπου δίνει εντολές) και του αντίπαλου-υπολογιστή (που απαντάει) και με χρήση
   των δύο σωληνών (όπου στην πρώτη pipe (p1) γράφει και απ' την δεύτερη pipe (p2) διαβάζει), εκτυλίσσεται το παιχνίδι ως εξής:
   Ο χρήστης δίνει μια συντεταγμένη απ' το πληκτρολόγιο (π.χ. HIT A1), εξετάζεται αν είναι έγκυρη και αν δεν έχει ξαναχτυπηθεί. Το δεύτερο εξετάζεται
   απ' το πίνακα του αντιπάλου που περιέχει είτε ήδη χτυπημένα σημεία (ΗΙΤ) είτε όχι (ΝΟΤ_ΗΙΤ). Η συντεταγμένη γράφεται στην pipe (p1) για να την εξετάσει
   η μητρική διεργασία (υπολογιστής). Επίσης στη συνέχεια γράφει στην p1 το αποτέλεσμα του προηγούμενου χτυπήματος του υπολογιστή και μετά διαβάζει απ' την
   δεύτερη pipe (p2) το αποτέλεσμα του χτυπήματος του χρήστη και το τυπώνει και στο πίνακα του υπολογιστή που εμφανίζεται στο interface του παιχνιδιού. Μετά
   διαβάζει απ' την p2 παίρνοντας απάντηση αν χτύπησε όλα τα πλοία του αντιπάλου. Αν ναι τότε επιστρέφει η συνάρτηση στη main και τερματίζει η διεργασία παιδί 
   τυπώνοντας μήνυμα νίκης του παίχτη. Εάν το παιχνίδι δεν τελείωσε, έρχεται η σειρά του υπολογιστή να χτυπήσει. Ο χρήστης διαβάζει απ' την p1 την συντεταγμένη
   που χτυπήθηκε, αναζητάει στον πίνακα του και αναθέτει το αποτέλεσμα (αν δεν χτυπήθηκε, αν χτυπήθηκε ή αν βυθίστηκε πλοίο) και κάνει τις αντίστοιχες τυπώσεις.
   Προτού ο χρήστης ξαναχτυπήσει, τσεκάρει αν χτυπήθηκαν όλα του τα πλοία και στέλνει το αποτέλεσμα στην p1 γιατι τότε πρέπει να τερματιστεί το παιχνίδι (ήττα του χρήστη).
   Το παιχνίδι συνεχίζει απ' τη πλευρά του χρήστη μέχρι είτε διαβάζει τον τερματισμό απ' την (p2) (νίκη) ή διαπιστώσει ότι έχασε ειδοποιώντας και τον αντίπαλο 
   μέσω της (p1).

   -> Computer Player (Parent Process)
  
   Αρχικά τοποθετεί τα πλοία του σε τυχαίες θέσεις παράγοντας τιμές πρύμνης-πλώρης για κάθε πλοίο που ικανοποιούν τους κανόνες του παιχνιδιού, ενημερώνοντας 
   τον πίνακα του.
   Εντελώς συμμετρικά με τη χρήση των δύο άλλων ακρών των 2 σωληνών p1 , p2 o υπολογιστής λειτουργεί ως εξής:
   - Διαβάζει αρχικά απ' την p1 την συντεταγμένη που χτυπάει ο χρήστης.
   - Διαβάζει το αποτέλεσμα του προηγούμενου χτυπήματός του απ' την p1 (αποτυχία - επιτυχία - βύθισμα πλοίου) το οποίο χρησιμοποιεί για την αναζήτηση του σημείου που επρόκειτο να χτυπήσει.
   - Γράφει στην p2 το αποτέλεσμα του χτυπήματος του χρήστη (αποτυχία - επιτυχία - βύθισμα πλοίου) αφού τσέκαρε τον πίνακα του.
   - Γράφει στην p2 τον έλεγχο εαν τελείωσε το παιχνίδι. Σε περίπτωση που χτυπήθηκαν όλα τα πλοία του υπολογιστή τερματίζει η συνάρτηση του υπολογιστεί, επιστρέφει στην
     main και αφού περιμένει τον τερματισμό του παιδιού-χρήστη, τερματίζει και αυτή (ήττα υπολογιστή).
   - Στη συνέχεια είναι η σειρά του υπολογιστή να παράγει μια νέα συντεταγμένη χτυπήματος. Λήφθηκαν οι παρακάτω περιπτώσεις συνοπτικά (πιο αναλυτικά στα σχόλια του προγράμματος) για την 
     νοημοσύνη του υπολογιστή:
     - Αν απέτυχε στην προηγούμενη προσπάθεια και δεν έχει χτυπήσει επιτυχώς κάποιο σημείο παράγει μια τυχαία τιμή εξετάζοντας αυτή να μην έχει ξαναχτυπηθεί με χρήση του πίνακα του αντιπάλου.
     - Αν κατάφερε να χτυπήσει ένα σημείο τότε παράγει μια γειτονική τιμή. (Αναθέτει μια boolean μεταβλητή first=1).
     - Αν απέτυχε ενώ έχει χτυπήσει το πρώτο σημείο παράγει την επόμενη γειτονική τιμή.
     - Αν πέτυχε και δεύτερο σημείο (first=1, second=1) τότε συνεχίζει να παράγει τιμές στην κατεύθυνση των 2 πρώτων τιμών μέχρι να πετύχει πλοίο. Αν πετύχει πλοίο και δεν υπάρχουν άλλα γειτονικά
       πλοία, παράγει νέα τυχαία τιμή. Αν πέτυχε πλοίο αλλα υπάρχουν και γειτονικά τα αναζητά παράγοντας την σωστή γειτονική τιμή. Αν δεν πέτυχε κανένα πλοίο ενώ εξάντλησε τις προσπάθειες σε μια
       κατεύθυνση τότε ψάχνει για πλοία για κάθε σημείο που πέτυχε στην αντίθετη κατεύθυνση.
   - Γράφει την συντεταγμένη  που θα χτυπήσει  στην p2, ενημερώνει τον αντίπαλο πίνακα που κρατάει για να μην την ξαναχτυπήσει σε επόμενη κίνηση.
   - Τέλος διαβάζει απ την p1 εάν χτύπησε όλα τα πλοία του χρήστη και εάν ναι τερματίζει η συνάρτηση, επιστρέφει στη main, αναμένει τον τερματισμό του παιδιού και τέλος τερματίζει (νίκη υπολογιστή).




      
                   



